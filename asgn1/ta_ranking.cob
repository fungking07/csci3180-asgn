000000*/*
000000* * CSCI3180 Principles of Programming Languages
000000* *
000000* * --- Declaration ---
000000* *
000000* * I declare that the assignment here submitted is original except for source
000000* * material explicitly acknowledged. I also acknowledge that I am aware of
000000* * University policy and regulations on honesty in academic work, and of the
000000* * disciplinary guidelines and procedures applicable to breaches of such policy
000000* * and regulations, as contained in the website
000000* * http://www.cuhk.edu.hk/policy/academichonesty/
000000* *
000000* * Assignment 1
000000* * Name : Lam King Fung
000000* * Student ID : 1155108968
000000* * Email Addr : kflam8@cse.cuhk.edu.hk
000000* */
000001
000010 IDENTIFICATION DIVISION.
000020 PROGRAM-ID.   TA_RANKING.
000030 AUTHOR        LAM KING FUNG.
000031
000040 ENVIRONMENT DIVISION.
000041
000050 INPUT-OUTPUT SECTION.
000051*FILE I/O
000060 FILE-CONTROL.
000070     SELECT CANDIDATES ASSIGN TO 'candidates.txt'
000071       ORGANIZATION IS LINE SEQUENTIAL
000072       FILE STATUS IS CAN-FS.
000080     SELECT INSTRUCTORS ASSIGN TO 'instructors.txt'
000081       ORGANIZATION IS LINE SEQUENTIAL
000082       FILE STATUS IS INS-FS.
000090     SELECT OUTPUT-FILE ASSIGN TO 'output.txt'
000091       ORGANIZATION IS BINARY SEQUENTIAL.
000092
000100 DATA DIVISION.
000101
000110 FILE SECTION.
000111*CREATE STRCTURE OF CANDIDATES
000120 FD CANDIDATES.
000130 01 CAN-RECORD.
000140     03 SID PIC X(11).
000150     03 SKILLS.
000160         05 SKILL1 PIC X(15).
000170         05 SKILL2 PIC X(15).
000180         05 SKILL3 PIC X(15).
000190         05 SKILL4 PIC X(15).
000200         05 SKILL5 PIC X(15).
000210         05 SKILL6 PIC X(15).
000220         05 SKILL7 PIC X(15).
000230         05 SKILL8 PIC X(15).
000240     03 PREFERRED.
000250         05 1ST PIC X(5).
000260         05 2ND PIC X(5).
000270         05 3RD PIC X(5).
000271
000280 FD INSTRUCTORS.
000281*CREATE STRUCTURE OF COURSES
000290 01 INS-RECORD.
000300     03 COURSE-CODE PIC X(5).
000310     03 REQUIRED-SKILLS.
000320         05 RSKILL1 PIC X(15).
000330         05 RSKILL2 PIC X(15).
000340         05 RSKILL3 PIC X(15).
000350     03 OPTIONAL-SKILLS.
000360         05 OSKILL1 PIC X(15).
000370         05 OSKILL2 PIC X(15).
000380         05 OSKILL3 PIC X(15).
000380         05 OSKILL4 PIC X(15).
000400         05 OSKILL5 PIC X(15).
000401
000410 FD OUTPUT-FILE.
000411*CREATE STRCTURE OF OUTPUT FILE
000420 01 OUTPUT-RECORD.
000430     03 COURSE-CODE PIC X(5).
000440*     03 RANKINGS.
000450     03 RANK1 PIC X(11).
000460     03 RANK2 PIC X(11).
000470     03 RANK3 PIC X(11).
000480     03 LF PIC X.
000481
000490 WORKING-STORAGE SECTION.
000500 01 CAN-FS PIC 99.
000510 01 INS-FS PIC 99.
000515 01 SCORE PIC 9V9.
000520 01 TA-RANKING-SCORE-TABLE.
000530     03 TA-RANKING-SCORE PIC 9V9 OCCURS 3 TIMES VALUE ZERO.
000531 01 ERROR-MSG PIC X(18) VALUE 'non-existing file!'.
000532 01 TEMPSID PIC X(11) VALUE '0000000000 '.
000533
000540 PROCEDURE DIVISION.
000550 MAIN-PARAGRAPH.
000560     OPEN INPUT INSTRUCTORS CANDIDATES.
000570     GO TO INSTRUCTORS-EXIST.
000571
000580*CHECK IF FILE EXISTS
000590*CHECK IF INSTRUCTORS.TXT EXIST
000600 INSTRUCTORS-EXIST.
000610     IF INS-FS NOT = 35 THEN
000620         GO TO CANDIDATES-EXIST
000630     END-IF.
000640     DISPLAY ERROR-MSG.
000650     GO TO EXIT-PROGRAM.
000651
000660*CHECK IF CANDIDATES.TXT EXIST
000670 CANDIDATES-EXIST.
000680     IF CAN-FS NOT = 35 THEN
000690         GO TO INSTRUCTORS-EMPTY
000700     END-IF.
000710     DISPLAY ERROR-MSG.
000720     GO TO EXIT-PROGRAM.
000721
000730*CHECK IF INSTRUCTORS.TXT IS EMPTY
000740 INSTRUCTORS-EMPTY.
000750     READ INSTRUCTORS INTO INS-RECORD.
000760     IF INS-FS = 10 THEN
000770         OPEN OUTPUT OUTPUT-FILE
000780         CLOSE OUTPUT-FILE
000785         GO TO EXIT-PROGRAM
000790     END-IF.
000800     CLOSE INSTRUCTORS.
000810     OPEN INPUT INSTRUCTORS.
000820     GO TO CANDIDATES-EMPTY.
000821
000830 CANDIDATES-EMPTY.
000840     READ CANDIDATES INTO CAN-RECORD.
000850     IF CAN-FS = 10 THEN
000860         OPEN OUTPUT OUTPUT-FILE
000870         GO TO OUTPUT-WITH-PLACEHOLDER
000880     END-IF.
000890     CLOSE CANDIDATES.
000900     OPEN INPUT CANDIDATES.
000905     OPEN OUTPUT OUTPUT-FILE.
000910     GO TO TA-SELECTION.
000911
000920 OUTPUT-WITH-PLACEHOLDER.
000930     READ INSTRUCTORS INTO INS-RECORD.
000940     IF INS-FS = 10 THEN
000950         CLOSE OUTPUT-FILE
000960         GO TO EXIT-PROGRAM
000970     END-IF.
000980     MOVE COURSE-CODE IN INS-RECORD TO COURSE-C
000990-    ODE IN OUTPUT-RECORD.
001000     MOVE TEMPSID TO RANK1 IN OUTPUT-RECORD.
001010     MOVE TEMPSID TO RANK2 IN OUTPUT-RECORD.
001020     MOVE TEMPSID TO RANK3 IN OUTPUT-RECORD.
001030     MOVE x'0a' TO LF IN OUTPUT-RECORD.
001040     WRITE OUTPUT-RECORD.
001050     GO TO OUTPUT-WITH-PLACEHOLDER.
001051
001060 TA-SELECTION.
001064*     WRITE OUTPUT-RECORD.
001065     MOVE 0.0 TO TA-RANKING-SCORE(1).
001066     MOVE 0.0 TO TA-RANKING-SCORE(2).
001067     MOVE 0.0 TO TA-RANKING-SCORE(3).
001068     MOVE x'0a' TO LF IN OUTPUT-RECORD.
001070     READ INSTRUCTORS INTO INS-RECORD.
001075*     DISPLAY INS-FS.
001080     IF INS-FS = 10 THEN
001085         CLOSE OUTPUT-FILE
001090         GO TO EXIT-PROGRAM
001100     END-IF.
001110     MOVE COURSE-CODE IN INS-RECORD TO COURSE-C
001120-    ODE IN OUTPUT-RECORD.
001130     MOVE TEMPSID TO RANK1 IN OUTPUT-RECORD.
001140     MOVE TEMPSID TO RANK2 IN OUTPUT-RECORD.
001150     MOVE TEMPSID TO RANK3 IN OUTPUT-RECORD.
001160     GO TO TA-SELECT-AND-RANKING.
001161 
001170 TA-SELECT-AND-RANKING.
001180     READ CANDIDATES INTO CAN-RECORD.
001182*     DISPLAY SKILL1.
001185     MOVE 0.0 TO SCORE.
001190     IF CAN-FS = 10 THEN
001194         WRITE OUTPUT-RECORD
001195         CLOSE CANDIDATES
001196         OPEN INPUT CANDIDATES
001200         GO TO TA-SELECTION
001210     END-IF.
001211
001219*CHECK IF MET REQ SKILLS
001220     IF (SKILL1 IN CAN-RECORD = RSKILL1) OR (SKILL2 = RSKILL1) OR 
001230-    (SKILL3 = RSKILL1) OR (SKILL4 = RSKILL1) OR (SKIL
001240-    L5 = RSKILL1) OR (SKILL6 = RSKILL1) OR (SKIL
001250-    L7 = RSKILL1) OR (SKILL8 = RSKILL1) THEN
001255*         DISPLAY '1ST DONE!'
001260         GO TO CKECK-SECOND-REQUIRED
001270     END-IF.
001271     GO TO TA-SELECT-AND-RANKING.
001278
001279 CKECK-SECOND-REQUIRED.
001280     IF (SKILL1 = RSKILL2) OR (SKILL2 = RSKILL2) OR (SKI
001290-    LL3 = RSKILL2) OR (SKILL4 = RSKILL2) OR (SKIL
001300-    L5 = RSKILL2) OR (SKILL6 = RSKILL2) OR (SKIL
001310-    L7 = RSKILL2) OR (SKILL8 = RSKILL2) THEN
001320         GO TO CHECK-THIRD-REQUIRED
001330     END-IF.
001331     GO TO TA-SELECT-AND-RANKING.
001338
001339 CHECK-THIRD-REQUIRED.
001340     IF (SKILL1 = RSKILL3) OR (SKILL2 = RSKILL3) OR (SKI
001350-    LL3 = RSKILL3) OR (SKILL4 = RSKILL3) OR (SKIL
001360-    L5 = RSKILL3) OR (SKILL6 = RSKILL3) OR (SKIL
001370-    L7 = RSKILL3) OR (SKILL8 = RSKILL3) THEN
001380         GO TO ADD-AND-RANK
001390     END-IF.
001391     GO TO TA-SELECT-AND-RANKING.
001397
001398*ADD THE BASIC SCORE
001399 ADD-AND-RANK.
001400     COMPUTE SCORE = SCORE + 1.0.
001401
001419*ADD THE SCORE FOR OPTIONAL SKILLS
001420     IF (SKILL1 = OSKILL1) OR (SKILL2 = OSKILL1) OR 
001430-    (SKILL3 = OSKILL1) OR (SKILL4 = OSKILL1) OR 
001440-    (SKILL5 = OSKILL1) OR (SKILL6 = OSKILL1) OR
001450-    (SKILL7 = OSKILL1) OR (SKILL8 = OSKILL1) THEN
001460         COMPUTE SCORE = SCORE + 1.0
001470     END-IF.
001471
001480     IF (SKILL1 = OSKILL2) OR (SKILL2 = OSKILL2) OR 
001490-    (SKILL3 = OSKILL2) OR (SKILL4 = OSKILL2) OR 
001500-    (SKILL5 = OSKILL2) OR (SKILL6 = OSKILL2) OR
001510-    (SKILL7 = OSKILL2) OR (SKILL8 = OSKILL2) THEN
001520         COMPUTE SCORE = SCORE + 1.0
001530     END-IF.
001541
001550     IF (SKILL1 = OSKILL3) OR (SKILL2 = OSKILL3) OR 
001560-    (SKILL3 = OSKILL3) OR (SKILL4 = OSKILL3) OR 
001670-    (SKILL5 = OSKILL3) OR (SKILL6 = OSKILL3) OR
001580-    (SKILL7 = OSKILL3) OR (SKILL8 = OSKILL3) THEN
001590         COMPUTE SCORE = SCORE + 1.0
001600     END-IF.
001601
001610     IF (SKILL1 = OSKILL4) OR (SKILL2 = OSKILL4) OR 
001620-    (SKILL3 = OSKILL4) OR (SKILL4 = OSKILL4) OR 
001630-    (SKILL5 = OSKILL4) OR (SKILL6 = OSKILL4) OR
001640-    (SKILL7 = OSKILL4) OR (SKILL8 = OSKILL4) THEN
001650         COMPUTE SCORE = SCORE + 1.0
001660     END-IF.
001661
001670     IF (SKILL1 = OSKILL1) OR (SKILL2 = OSKILL1) OR 
001680-    (SKILL3 = OSKILL1) OR (SKILL4 = OSKILL1) OR 
001690-    (SKILL5 = OSKILL1) OR (SKILL6 = OSKILL1) OR
001700-    (SKILL7 = OSKILL1) OR (SKILL8 = OSKILL1) THEN
001710         COMPUTE SCORE = SCORE + 1.0
001720     END-IF.
001721
001739*ADD THE PREFERENCE SCORE
001740     IF COURSE-CODE IN INS-RECORD = 1ST IN CAN-RECORD THEN
001750         COMPUTE SCORE = SCORE + 1.5
001760     END-IF.
001770     IF COURSE-CODE IN INS-RECORD = 2ND IN CAN-RECORD THEN
001780         COMPUTE SCORE = SCORE + 1.0
001790     END-IF.
001800     IF COURSE-CODE IN INS-RECORD = 3RD IN CAN-RECORD THEN
001810         COMPUTE SCORE = SCORE + 0.5
001820     END-IF.
001821
001829*RANK FROM FIRST PLACE
001830     IF (SCORE > TA-RANKING-SCORE(1)) THEN
001840         PERFORM INSERT-FIRST
001850         GO TO TA-SELECT-AND-RANKING
001860     END-IF.
001861
001870     IF (SCORE = TA-RANKING-SCORE(1)) THEN
001880         IF (SID < RANK1 IN OUTPUT-RECORD) THEN
001890             PERFORM INSERT-FIRST
001900             GO TO TA-SELECT-AND-RANKING
001910         END-IF
001920         IF (SID > RANK1 IN OUTPUT-RECORD) THEN
001930             IF (SCORE > TA-RANKING-SCORE(2)) THEN
001940                 PERFORM INSERT-SECOND
001950                 GO TO TA-SELECT-AND-RANKING
001960             END-IF
001970             IF (SCORE = TA-RANKING-SCORE(2)) THEN
001980                 IF (SID < RANK2 IN OUTPUT-RECORD)
001990                     PERFORM INSERT-SECOND
002000                     GO TO TA-SELECT-AND-RANKING
002010                 END-IF
002020                 IF (SID > RANK2 IN OUTPUT-RECORD) THEN
002030                     IF (SCORE > TA-RANKING-SCORE(3)) THEN
002040                         PERFORM INSERT-THIRD
002050                         GO TO TA-SELECT-AND-RANKING
002060                     END-IF
002070                     IF (SCORE = TA-RANKING-SCORE(3)) THEN
002080                         IF (SID < RANK3 IN OUTPUT-RECORD) THEN
002090                             PERFORM INSERT-THIRD
002100                             GO TO TA-SELECT-AND-RANKING
002110                         END-IF
002120                     END-IF
002130                 END-IF
002135             END-IF
002140         END-IF
002150     END-IF.
002161
002169*RANK FROM SECOND PLACE
002170     IF (SCORE > TA-RANKING-SCORE(2)) THEN
002180         PERFORM INSERT-SECOND
002190         GO TO TA-SELECT-AND-RANKING
002200     END-IF.
002210     IF (SCORE = TA-RANKING-SCORE(2)) THEN
002220         IF (SID < RANK2 IN OUTPUT-RECORD)
002230             PERFORM INSERT-SECOND
002240             GO TO TA-SELECT-AND-RANKING
002250         END-IF
002260         IF (SID > RANK2 IN OUTPUT-RECORD) THEN
002270             IF (SCORE > TA-RANKING-SCORE(3)) THEN
002280                 PERFORM INSERT-THIRD
002290                 GO TO TA-SELECT-AND-RANKING
002300             END-IF
002310             IF (SCORE = TA-RANKING-SCORE(3)) THEN
002320                 IF (SID < RANK3 IN OUTPUT-RECORD) THEN
002330                     PERFORM INSERT-THIRD
002340                     GO TO TA-SELECT-AND-RANKING
002350                 END-IF
002360             END-IF
002370         END-IF
002380     END-IF.
002381
002389*RANK FROM THIRD PLACE
002390     IF (SID > RANK2 IN OUTPUT-RECORD) THEN
002400         IF (SCORE > TA-RANKING-SCORE(3)) THEN
002410             PERFORM INSERT-THIRD
002420             GO TO TA-SELECT-AND-RANKING
002430         END-IF
002440         IF (SCORE = TA-RANKING-SCORE(3)) THEN
002450             IF (SID < RANK3 IN OUTPUT-RECORD) THEN
002460                 PERFORM INSERT-THIRD
002470                 GO TO TA-SELECT-AND-RANKING
002480             END-IF
002490         END-IF
002500     END-IF.
002501
002509*IF NO PLACE IS GIVEN, BACK TO READING NEXT CANDIDATE
002510     GO TO TA-SELECT-AND-RANKING.
002511
999600 INSERT-FIRST.
999610     MOVE RANK2 IN OUTPUT-RECORD TO RANK3 IN OUTPUT-RECORD.
999620     MOVE TA-RANKING-SCORE(2) TO TA-RANKING-SCORE(3).
999630     MOVE RANK1 IN OUTPUT-RECORD TO RANK2 IN OUTPUT-RECORD.
999640     MOVE TA-RANKING-SCORE(1) TO TA-RANKING-SCORE(2).
999650     MOVE SID IN CAN-RECORD TO RANK1 IN OUTPUT-RECORD.
999660     MOVE SCORE TO TA-RANKING-SCORE(1).
999669
999700 INSERT-SECOND.
999710     MOVE RANK2 IN OUTPUT-RECORD TO  RANK3 IN OUTPUT-RECORD.
999720     MOVE TA-RANKING-SCORE(2) TO TA-RANKING-SCORE(3).
999730     MOVE SID TO RANK2 IN OUTPUT-RECORD.
999740     MOVE SCORE TO TA-RANKING-SCORE(2).
999799
999800 INSERT-THIRD.
999810     MOVE SID TO RANK3 IN OUTPUT-RECORD.
999820     MOVE SCORE TO TA-RANKING-SCORE(3).
999990
999991 EXIT-PROGRAM.
999998     CLOSE INSTRUCTORS CANDIDATES.
999999     STOP RUN.