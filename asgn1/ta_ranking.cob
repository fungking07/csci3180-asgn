000000*/*
000000* * CSCI3180 Principles of Programming Languages
000000* *
000000* * --- Declaration ---
000000* *
000000* * I declare that the assignment here submitted is original except for source
000000* * material explicitly acknowledged. I also acknowledge that I am aware of
000000* * University policy and regulations on honesty in academic work, and of the
000000* * disciplinary guidelines and procedures applicable to breaches of such policy
000000* * and regulations, as contained in the website
000000* * http://www.cuhk.edu.hk/policy/academichonesty/
000000* *
000000* * Assignment 1
000000* * Name : Lam King Fung
000000* * Student ID : 1155108968
000000* * Email Addr : kflam8@cse.cuhk.edu.hk
000000* */
000001
000010 IDENTIFICATION DIVISION.
000020 PROGRAM-ID.   TA_RANKING.
000030 AUTHOR        LAM KING FUNG.
000031
000040 ENVIRONMENT DIVISION.
000041
000050 INPUT-OUTPUT SECTION.
000051*FILE I/O
000060 FILE-CONTROL.
000070     SELECT CANDIDATES ASSIGN TO 'candidates.txt'
000071       ORGANIZATION IS LINE SEQUENTIAL
000072       FILE STATUS IS CAN-FS.
000080     SELECT INSTRUCTORS ASSIGN TO 'instructors.txt'
000081       ORGANIZATION IS LINE SEQUENTIAL
000082       FILE STATUS IS INS-FS.
000090     SELECT OUTFILE ASSIGN TO 'output.txt'
000091       ORGANIZATION IS BINARY SEQUENTIAL.
000092
000100 DATA DIVISION.
000101
000110 FILE SECTION.
000111*CREATE STRCTURE OF CANDIDATES
000120 FD CANDIDATES.
000130 01 CAN-RECORD.
000140     03 SID PIC X(11).
000150     03 SKILLS.
000160         05 SKILL1 PIC X(15).
000170         05 SKILL2 PIC X(15).
000180         05 SKILL3 PIC X(15).
000190         05 SKILL4 PIC X(15).
000200         05 SKILL5 PIC X(15).
000210         05 SKILL6 PIC X(15).
000220         05 SKILL7 PIC X(15).
000230         05 SKILL8 PIC X(15).
000240     03 PREFERRED.
000250         05 1ST PIC X(5).
000260         05 2ND PIC X(5).
000270         05 3RD PIC X(5).
000271
000280 FD INSTRUCTORS.
000281*CREATE STRCTURE OF COURSES
000290 01 INS-RECORD.
000300     03 COURSE-CODE PIC X(5).
000310     03 REQUIRED-SKILLS.
000320         05 RSKILL1 PIC X(15).
000330         05 RSKILL2 PIC X(15).
000340         05 RSKILL3 PIC X(15).
000350     03 OPTIONAL-SKILLS.
000360         05 OSKILL1 PIC X(15).
000370         05 OSKILL2 PIC X(15).
000380         05 OSKILL3 PIC X(15).
000380         05 OSKILL4 PIC X(15).
000400         05 OSKILL5 PIC X(15).
000401
000410 FD OUTFILE.
000411*CREATE STRCTURE OF OUTPUT FILE
000420 01 OUTPUT-RECORD.
000430     03 COURSE-CODE PIC X(5).
000440*     03 RANKINGS.
000450     03 RANK1 PIC X(11).
000460     03 RANK2 PIC X(11).
000470     03 RANK3 PIC X(11).
000480     03 LF PIC X.
000481
000490 WORKING-STORAGE SECTION.
000500 01 CAN-FS PIC 99.
000510 01 INS-FS PIC 99.
000515 01 SCORE PIC 9V9.
000520 01 TA-RANKING-SCORE-TABLE.
000530     03 TA-RANKING-SCORE PIC 9V9 OCCURS 3 TIMES VALUE ZERO.
000531 01 ERROR-MSG PIC X(18) VALUE 'non-existing file!'.
000532 01 TEMPSID PIC X(11) VALUE '0000000000 '.
000533
000540 PROCEDURE DIVISION.
000550 MAIN-PARAGRAPH.
000560     OPEN INPUT INSTRUCTORS CANDIDATES.
000570     GO TO INSTRUCTORS-EXIST.
000571
000580*CHECK IF FILE EXISTS
000590*CHECK IF INSTRUCTORS.TXT EXIST
000600 INSTRUCTORS-EXIST.
000610     IF INS-FS NOT = 35 THEN
000620         GO TO CANDIDATES-EXIST
000630     END-IF.
000640     DISPLAY ERROR-MSG.
000650     GO TO EXIT-PROGRAM.
000651
000660*CHECK IF CANDIDATES.TXT EXIST
000670 CANDIDATES-EXIST.
000680     IF CAN-FS NOT = 35 THEN
000690         GO TO INSTRUCTORS-EMPTY
000700     END-IF.
000710     DISPLAY ERROR-MSG.
000720     GO TO EXIT-PROGRAM.
000721
000730*CHECK IF INSTRUCTORS.TXT IS EMPTY
000740 INSTRUCTORS-EMPTY.
000750     READ INSTRUCTORS INTO INS-RECORD.
000760     IF INS-FS = 10 THEN
000770         OPEN OUTPUT OUTFILE
000780         CLOSE OUTFILE
000785         GO TO EXIT-PROGRAM
000790     END-IF.
000800     CLOSE INSTRUCTORS.
000810     OPEN INPUT INSTRUCTORS.
000820     GO TO CANDIDATES-EMPTY.
000821
000830 CANDIDATES-EMPTY.
000840     READ CANDIDATES INTO CAN-RECORD.
000850     IF CAN-FS = 10 THEN
000860         OPEN OUTPUT OUTFILE
000870         GO TO OUTPUT-WITH-PLACEHOLDER
000880     END-IF.
000890     CLOSE CANDIDATES.
000900     OPEN INPUT CANDIDATES.
000910     GO TO TA-SELECTION.
000911
000920 OUTPUT-WITH-PLACEHOLDER.
000930     READ INSTRUCTORS INTO INS-RECORD.
000940     IF INS-FS = 10 THEN
000950         CLOSE OUTFILE
000960         GO TO EXIT-PROGRAM
000970     END-IF.
000980     MOVE COURSE-CODE IN INS-RECORD TO COURSE-C
000990-    ODE IN OUTPUT-RECORD.
001000     MOVE TEMPSID TO RANK1 IN OUTPUT-RECORD.
001010     MOVE TEMPSID TO RANK2 IN OUTPUT-RECORD.
001020     MOVE TEMPSID TO RANK3 IN OUTPUT-RECORD.
001030     MOVE x'0a' TO LF IN OUTPUT-RECORD.
001040     WRITE OUTPUT-RECORD.
001050     GO TO OUTPUT-WITH-PLACEHOLDER.
001051
001060 TA-SELECTION.
001061     MOVE 0.0 TO TA-RANKING-SCORE(1).
001062     MOVE 0.0 TO TA-RANKING-SCORE(2).
001063     MOVE 0.0 TO TA-RANKING-SCORE(3).
001064     MOVE x'0a' TO LF IN OUTPUT-RECORD.
001065     OPEN OUTPUT OUTFILE.
001070     READ INSTRUCTORS INTO INS-RECORD.
001080     IF INS-FS = 10 THEN
001085         CLOSE OUTFILE
001090         GO TO EXIT-PROGRAM
001100     END-IF.
001110     MOVE COURSE-CODE IN INS-RECORD TO COURSE-C
001120-    ODE IN OUTPUT-RECORD.
001130     MOVE TEMPSID TO RANK1 IN OUTPUT-RECORD.
001140     MOVE TEMPSID TO RANK2 IN OUTPUT-RECORD.
001150     MOVE TEMPSID TO RANK3 IN OUTPUT-RECORD.
001160     GO TO TA-SELECT-AND-RANKING.
001161 
001170 TA-SELECT-AND-RANKING.
001180     READ CANDIDATES INTO CAN-RECORD.
001185     MOVE 0.0 TO SCORE.
001190     IF INS-FS = 10 THEN
001191         WRITE OUTPUT-RECORD
001195         CLOSE CANDIDATES
001196         OPEN INPUT CANDIDATES
001200         GO TO TA-SELECTION
001210     END-IF.
001211
001219*CHECK IF MET REQ SKILLS, 
001220     IF (SKILL1 NOT = RSKILL1) AND (SKILL2 NOT = RSKILL1) AND (SKI
001230-    LL3 NOT = RSKILL1) AND (SKILL4 NOT = RSKILL1) AND (SKIL
001240-    L5 NOT = RSKILL1) AND (SKILL6 NOT = RSKILL1) AND (SKIL
001250-    L7 NOT = RSKILL1) AND (SKILL8 NOT = RSKILL1) THEN
001260         GO TO TA-SELECT-AND-RANKING
001270     END-IF.
001271
001280     IF (SKILL1 NOT = RSKILL2) AND (SKILL2 NOT = RSKILL2) AND (SKI
001290-    LL3 NOT = RSKILL2) AND (SKILL4 NOT = RSKILL2) AND (SKIL
001300-    L5 NOT = RSKILL2) AND (SKILL6 NOT = RSKILL2) AND (SKIL
001310-    L7 NOT = RSKILL2) AND (SKILL8 NOT = RSKILL2) THEN
001320         GO TO TA-SELECT-AND-RANKING
001330     END-IF.
001331
001340     IF (SKILL1 NOT = RSKILL3) AND (SKILL2 NOT = RSKILL3) AND (SKI
001350-    LL3 NOT = RSKILL3) AND (SKILL4 NOT = RSKILL3) AND (SKIL
001360-    L5 NOT = RSKILL3) AND (SKILL6 NOT = RSKILL3) AND (SKIL
001370-    L7 NOT = RSKILL3) AND (SKILL8 NOT = RSKILL3) THEN
001380         GO TO TA-SELECT-AND-RANKING
001390     END-IF.
001391
001399*ADD THE BASIC SCORE
001340     COMPUTE SCORE = SCORE + 1.0.
001341
001349*ADD THE SCORE FOR OPTIONAL SKILLS
001350     IF (SKILL1 = OSKILL1) OR (SKILL2 = OSKILL1) OR 
001360-    (SKILL3 = OSKILL1) OR (SKILL4 = OSKILL1) OR 
001370-    (SKILL5 = OSKILL1) OR (SKILL6 = OSKILL1) OR
001380-    (SKILL7 = OSKILL1) OR (SKILL8 = OSKILL1) THEN
001390         COMPUTE SCORE = SCORE + 1.0
001400     END-IF.
001401
001410     IF (SKILL1 = OSKILL2) OR (SKILL2 = OSKILL2) OR 
001420-    (SKILL3 = OSKILL2) OR (SKILL4 = OSKILL2) OR 
001430-    (SKILL5 = OSKILL2) OR (SKILL6 = OSKILL2) OR
001440-    (SKILL7 = OSKILL2) OR (SKILL8 = OSKILL2) THEN
001450         COMPUTE SCORE = SCORE + 1.0
001460     END-IF.
001461
001470     IF (SKILL1 = OSKILL3) OR (SKILL2 = OSKILL3) OR 
001480-    (SKILL3 = OSKILL3) OR (SKILL4 = OSKILL3) OR 
001490-    (SKILL5 = OSKILL3) OR (SKILL6 = OSKILL3) OR
001500-    (SKILL7 = OSKILL3) OR (SKILL8 = OSKILL3) THEN
001510         COMPUTE SCORE = SCORE + 1.0
001520     END-IF.
001521
001530     IF (SKILL1 = OSKILL4) OR (SKILL2 = OSKILL4) OR 
001540-    (SKILL3 = OSKILL4) OR (SKILL4 = OSKILL4) OR 
001550-    (SKILL5 = OSKILL4) OR (SKILL6 = OSKILL4) OR
001560-    (SKILL7 = OSKILL4) OR (SKILL8 = OSKILL4) THEN
001570         COMPUTE SCORE = SCORE + 1.0
001580     END-IF.
001581
001590     IF (SKILL1 = OSKILL1) OR (SKILL2 = OSKILL1) OR 
001600-    (SKILL3 = OSKILL1) OR (SKILL4 = OSKILL1) OR 
001610-    (SKILL5 = OSKILL1) OR (SKILL6 = OSKILL1) OR
001620-    (SKILL7 = OSKILL1) OR (SKILL8 = OSKILL1) THEN
001630         COMPUTE SCORE = SCORE + 1.0
001640     END-IF.
001641
001649*ADD THE PREFERENCE SCORE
001650     IF COURSE-CODE IN INS-RECORD = 1ST THEN
001660         COMPUTE SCORE = SCORE + 1.5
001670     END-IF.
001680     IF COURSE-CODE IN INS-RECORD = 2ND THEN
001690         COMPUTE SCORE = SCORE + 1.0
001700     END-IF.
001710     IF COURSE-CODE IN INS-RECORD = 3RD THEN
001720         COMPUTE SCORE = SCORE + 0.5
001730     END-IF.
001731
001739*RANK FROM FIRST PLACE
001740     IF (SCORE > TA-RANKING-SCORE(1)) THEN
001750         PERFORM INSERT-FIRST
001760         GO TO TA-SELECT-AND-RANKING
001770     END-IF.
001771
001780     IF (SCORE = TA-RANKING-SCORE(1)) THEN
001790         IF (SID < RANK1) THEN
001800             PERFORM INSERT-FIRST
001810             GO TO TA-SELECT-AND-RANKING
001820         END-IF
001830         IF (SID > RANK1) THEN
001840             IF (SCORE > TA-RANKING-SCORE(2)) THEN
001850                 PERFORM INSERT-SECOND
001860                 GO TO TA-SELECT-AND-RANKING
001870             END-IF
001880             IF (SCORE = TA-RANKING-SCORE(2)) THEN
001890                 IF (SID < RANK2)
001900                     PERFORM INSERT-SECOND
001910                     GO TO TA-SELECT-AND-RANKING
001920                 END-IF
001930                 IF (SID > RANK2) THEN
001940                     IF (SCORE > TA-RANKING-SCORE(3)) THEN
001950                         PERFORM INSERT-THIRD
001960                         GO TO TA-SELECT-AND-RANKING
001970                     END-IF
001980                     IF (SCORE = TA-RANKING-SCORE(3)) THEN
001990                         IF (SID < RANK3) THEN
002000                             PERFORM INSERT-THIRD
002010                             GO TO TA-SELECT-AND-RANKING
002020                         END-IF
002030                     END-IF
002040                 END-IF
002045             END-IF
002050         END-IF
002060     END-IF.
002061
002069*RANK FROM SECOND PLACE
002070     IF (SCORE > TA-RANKING-SCORE(2)) THEN
002080         PERFORM INSERT-SECOND
002090         GO TO TA-SELECT-AND-RANKING
002100     END-IF.
002110     IF (SCORE = TA-RANKING-SCORE(2)) THEN
002120         IF (SID < RANK2)
002130             PERFORM INSERT-SECOND
002140             GO TO TA-SELECT-AND-RANKING
002150         END-IF
002160         IF (SID > RANK2) THEN
002170             IF (SCORE > TA-RANKING-SCORE(3)) THEN
002180                 PERFORM INSERT-THIRD
002190                 GO TO TA-SELECT-AND-RANKING
002200             END-IF
002210             IF (SCORE = TA-RANKING-SCORE(3)) THEN
002220                 IF (SID < RANK3) THEN
002230                     PERFORM INSERT-THIRD
002240                     GO TO TA-SELECT-AND-RANKING
002250                 END-IF
002260             END-IF
002270         END-IF
002280     END-IF.
002281
002289*RANK FROM THIRD PLACE
002160     IF (SID > RANK2) THEN
002170         IF (SCORE > TA-RANKING-SCORE(3)) THEN
002180             PERFORM INSERT-THIRD
002190             GO TO TA-SELECT-AND-RANKING
002200         END-IF
002210         IF (SCORE = TA-RANKING-SCORE(3)) THEN
002220             IF (SID < RANK3) THEN
002230                 PERFORM INSERT-THIRD
002240                 GO TO TA-SELECT-AND-RANKING
002250             END-IF
002260         END-IF
002270     END-IF
002271
002279*IF NO PLACE IS GIVEN, BACK TO READING NEXT CANDIDATE
002280     GO TO TA-SELECT-AND-RANKING
002285
999600 INSERT-FIRST.
999610     MOVE RANK2 TO RANK3.
999620     MOVE TA-RANKING-SCORE(2) TO TA-RANKING-SCORE(3).
999630     MOVE RANK1 TO RANK2.
999640     MOVE TA-RANKING-SCORE(1) TO TA-RANKING-SCORE(2).
999650     MOVE SID IN CAN-RECORD TO RANK1.
999660     MOVE SCORE TO TA-RANKING-SCORE(1).
999669
999700 INSERT-SECOND.
999710     MOVE RANK2 TO RANK3.
999720     MOVE TA-RANKING-SCORE(2) TO TA-RANKING-SCORE(3).
999730     MOVE SID TO RANK2.
999740     MOVE SCORE TO TA-RANKING-SCORE(2)
999799
999800 INSERT-THIRD.
999810     MOVE SID TO RANK3.
999820     MOVE SCORE TO TA-RANKING-SCORE(3)
999899
999990
999991 EXIT-PROGRAM.
999992     CLOSE INSTRUCTORS CANDIDATES.
999999     STOP RUN.